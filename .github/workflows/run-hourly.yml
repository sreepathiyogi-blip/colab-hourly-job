name: Run meta_ads_reporter hourly

on:
  schedule:
    # Runs every hour at minute 0 (UTC time)
    - cron: "0 * * * *"
  workflow_dispatch:  # Allows manual trigger from Actions tab

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy requests
          pip install gspread gspread_dataframe google-auth google-auth-oauthlib google-auth-httplib2
          pip install IPython
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Step 4: Create service account credentials file
      - name: Setup Google credentials
        run: |
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=service-account.json" >> $GITHUB_ENV

      # Step 5: Run the Meta Ads Reporter script
      - name: Run meta_ads_reporter.py
        env:
          GOOGLE_APPLICATION_CREDENTIALS: service-account.json
          META_ACCESS_TOKEN: ${{ secrets.META_ACCESS_TOKEN }}
          SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
        run: |
          echo "===== Starting Script Execution ====="
          python meta_ads_reporter.py
          echo "===== Script Completed Successfully ====="

      # Step 6: Cleanup credentials
      - name: Cleanup credentials
        if: always()
        run: |
          rm -f service-account.json
